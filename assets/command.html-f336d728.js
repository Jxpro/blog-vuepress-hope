import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as t,c as p,a as s,b as a,d as e,e as c}from"./app-5e6e2e94.js";const d={},o=c(`<h1 id="linux常用指令" tabindex="-1"><a class="header-anchor" href="#linux常用指令" aria-hidden="true">#</a> Linux常用指令</h1><h2 id="一、tar-gzip" tabindex="-1"><a class="header-anchor" href="#一、tar-gzip" aria-hidden="true">#</a> 一、tar &amp; gzip</h2><ol><li><p>基础概念</p><ul><li><strong>打包</strong>：将一堆文件或目录什么的变成一个总的文件。</li><li><strong>压缩</strong>：将一个大的文件经过某种压缩算法变成一个小文件。</li></ul></li><li><p><code>tar</code>命令</p><p>单独使用（<code>man tar</code>可以查看 ）</p><p>常用参数 ：</p><ul><li><strong>-c 打包</strong></li><li><strong>-x 解包</strong></li><li><strong>-f 指定包的文件名，用在最后一个参数</strong></li><li>-v 详细显示处理的文件</li><li>-r 像压缩归档文件末尾追加文件</li><li>-u 更新原压缩包中的文件，仅将较新的文件附加到存档中</li><li>-t 列出存档中文件的目录</li></ul></li><li><p>为了方便用户在打包解包的同时压缩或解压文件，tar命令提供了一种特殊的功能，就是可以在打包解包的同时调用其他的压缩程序，比如：gzip，bzip2等。</p><ol><li><p>tar 调用 gzip：</p><p>gzip是GNU组织开发的一个压缩程序</p><p>.gz结尾的文件就是gzip压缩的结果，与gzip相对的解压程序是gunzip。</p><p><strong>-z 参数令 tar 使用来调用 gzip</strong></p></li><li><p>tar 调用 bzip2</p><p>bzip2是一个压缩能力更强的压缩程序</p><p>.bz2结尾的文件就是bzip2压缩的结果。与bzip2相对的解压程序是bunzip2。</p><p>tar中使用-j这个参数来调用gzip。</p></li></ol></li><li><p><code>gzip</code>命令</p><p>缺省情况下， gzip 将原始文件名和时间信息保存在压缩后的文件中。</p><p>gunzip 的功能 与 gzip -d 功能一样。gunzip 将命令行中以.gz, -gz, .z, -z, _z 或 .Z结尾并具有正确标志头的文件解压缩，并以去掉扩展名的解压缩文件替换原文件。</p><p>gunzip 也能识别扩展名为 .tgz 和 .taz 的文件，并将其分别当作 .tar.gz 和 .tar.Z 的缩写。</p><p>gunzip 目前能够解压由 gzip, zip, compress, compress -H 以及 pack产生的文件。</p><p>对输入格式的检测是自动的。</p><p><strong>常用参数：</strong></p><ul><li>-c 将结果写到标准输出，原文件保持不变</li><li>-d 解压缩</li><li>-r 递归式地查找指定目录并压缩其中的所有文件或者是解压缩</li><li>-t 测试，检查压缩文件是否完整</li><li>-v 对每一个压缩和解压的文件，显示文件名和压缩比</li><li>-l 列出每个压缩文件的如下项目： <ul><li>compressed size：压缩文件的长度</li><li>uncompressed size：压缩前文件的长度</li><li>ratio：压缩率（如果未知则为0.0%）</li><li>uncompressed_name：压缩前的文件名 Tips：对于非gzip 格式的文件，压缩前文件长度显示为 -1，例如由compress压缩的 .Z文件。</li></ul></li></ul></li></ol><h2 id="二、systemctl" tabindex="-1"><a class="header-anchor" href="#二、systemctl" aria-hidden="true">#</a> 二、systemctl</h2><p>查询服务是否开机启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl is-enabled xxx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>开机运行</strong>服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> xxx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>取消开机运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl disable xxx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>启动服务</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start xxx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>停止服务</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl stop xxx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>重启服务</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart xxx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重新加载服务配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl reload xxx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>查询</strong>服务运行状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status xxx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示启动失败的服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token parameter variable">--failed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三、su-和-sudo" tabindex="-1"><a class="header-anchor" href="#三、su-和-sudo" aria-hidden="true">#</a> 三、su 和 sudo</h2><ol><li><p>sudo是一种<strong>权限管理机制</strong>，依赖于/etc/sudoers</p><p>其定义了授权给哪个用户可以以管理员的身份能够执行什么样的管理命令；</p><p>格式：sudo -u username command</p><p>默认情况下，系统只有root用户可以执行sudo命令。需要root用户通过使用visudo命令编辑sudo的配置文件/etc/sudoers，才可以授权其他普通用户执行sudo命令。</p></li><li><p>su</p><p>su 为<code>switch user</code>，即切换用户的简写。</p><p>格式为两种：</p><ul><li>su - username （-l为login，即登陆的简写）</li><li>su username</li></ul><p>如果不指定用户名，默认即为root，所以切换到root的身份的命令即为：su [-] [root]</p><p><code>su username</code>与<code>su - username</code>的不同之处如下：</p><ul><li>su - username 切换用户后，<strong>同时切换到新用户的工作环境中</strong>。</li><li>su username 切换用户后，<strong>不改变原用户的工作目录，及其他环境变量目录</strong>。</li></ul></li></ol><h2 id="四、sed命令" tabindex="-1"><a class="header-anchor" href="#四、sed命令" aria-hidden="true">#</a> 四、sed命令</h2><blockquote><p><code>sed</code>是一种流编辑器，它是文本处理中非常中的工具，能够完美的配合正则表达式使用，功能不同凡响。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p></blockquote><h3 id="sed命令格式" tabindex="-1"><a class="header-anchor" href="#sed命令格式" aria-hidden="true">#</a> sed命令格式</h3><ul><li>命令格式<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token string">&#39;command&#39;</span> file<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token function">sed</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token parameter variable">-f</span> scriptfile file<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>选项<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>-e<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>或--expression<span class="token operator">=</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>：以选项中的指定的script来处理输入的文本文件；
-f<span class="token operator">&lt;</span>script文件<span class="token operator">&gt;</span>或--file<span class="token operator">=</span><span class="token operator">&lt;</span>script文件<span class="token operator">&gt;</span>：以选项中指定的script文件来处理输入的文本文件；
-h或--help：显示帮助；
-n或--quiet或——silent：仅显示script处理后的结果；
-V或--version：显示版本信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>命令<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>a<span class="token punctuation">\\</span> 在当前行下面插入文本。
i<span class="token punctuation">\\</span> 在当前行上面插入文本。
c<span class="token punctuation">\\</span> 把选定的行改为新的文本。
d 删除，删除选择的行。
D 删除模板块的第一行。
s 替换指定字符
h 拷贝模板块的内容到内存中的缓冲区。
H 追加模板块的内容到内存中的缓冲区。
g 获得内存缓冲区的内容，并替代当前模板块中的文本。
G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。
l 列表不能打印字符的清单。
n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。
N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。
p 打印模板块的行。
P<span class="token punctuation">(</span>大写<span class="token punctuation">)</span> 打印模板块的第一行。
q 退出Sed。
b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。
r <span class="token function">file</span> 从file中读行。
t label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。
T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。
w <span class="token function">file</span> 写并追加模板块到file末尾。
W <span class="token function">file</span> 写并追加模板块的第一行到file末尾。
<span class="token operator">!</span> 表示后面的命令对所有没有被选定的行发生作用。
<span class="token operator">=</span> 打印当前行号码。
<span class="token comment"># 把注释扩展到下一个换行符以前。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>参数 文件：指定待处理的文本文件列表。</li></ul><h3 id="sed替换标记" tabindex="-1"><a class="header-anchor" href="#sed替换标记" aria-hidden="true">#</a> sed替换标记</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>g 表示行内全面替换。
p 表示打印行。
w 表示把行写入一个文件。
x 表示互换模板块中的文本和缓冲区中的文本。
y 表示把一个字符翻译为另外的字符（但是不用于正则表达式）
<span class="token punctuation">\\</span><span class="token number">1</span> 子串匹配标记
<span class="token operator">&amp;</span> 已匹配字符串标记
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sed元字符集" tabindex="-1"><a class="header-anchor" href="#sed元字符集" aria-hidden="true">#</a> sed元字符集</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>^ 匹配行开始，如：/^sed/匹配所有以sed开头的行。
$ 匹配行结束，如：/sed$/匹配所有以sed结尾的行。
<span class="token builtin class-name">.</span> 匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。
* 匹配0个或多个字符，如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。
<span class="token punctuation">[</span><span class="token punctuation">]</span> 匹配一个指定范围内的字符，如/<span class="token punctuation">[</span>ss<span class="token punctuation">]</span>ed/匹配sed和Sed。
<span class="token punctuation">[</span>^<span class="token punctuation">]</span> 匹配一个不在指定范围内的字符，如：/<span class="token punctuation">[</span>^A-RT-Z<span class="token punctuation">]</span>ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。
<span class="token punctuation">\\</span><span class="token punctuation">(</span><span class="token punctuation">..</span><span class="token punctuation">\\</span><span class="token punctuation">)</span> 匹配子串，保存匹配的字符，如s/<span class="token punctuation">\\</span><span class="token punctuation">(</span>love<span class="token punctuation">\\</span><span class="token punctuation">)</span>able/<span class="token punctuation">\\</span>1rs，loveable被替换成lovers。
<span class="token operator">&amp;</span> 保存搜索字符用来替换其他字符，如s/love/**<span class="token operator">&amp;</span>**/，love这成**love**。
<span class="token punctuation">\\</span><span class="token operator">&lt;</span> 匹配单词的开始，如:/<span class="token punctuation">\\</span><span class="token operator">&lt;</span>love/匹配包含以love开头的单词的行。
<span class="token punctuation">\\</span><span class="token operator">&gt;</span> 匹配单词的结束，如/love<span class="token punctuation">\\</span><span class="token operator">&gt;</span>/匹配包含以love结尾的单词的行。
x<span class="token punctuation">\\</span><span class="token punctuation">{</span>m<span class="token punctuation">\\</span><span class="token punctuation">}</span> 重复字符x，m次，如：/0<span class="token punctuation">\\</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">\\</span><span class="token punctuation">}</span>/匹配包含5个0的行。
x<span class="token punctuation">\\</span><span class="token punctuation">{</span>m,<span class="token punctuation">\\</span><span class="token punctuation">}</span> 重复字符x，至少m次，如：/0<span class="token punctuation">\\</span><span class="token punctuation">{</span><span class="token number">5</span>,<span class="token punctuation">\\</span><span class="token punctuation">}</span>/匹配至少有5个0的行。
x<span class="token punctuation">\\</span><span class="token punctuation">{</span>m,n<span class="token punctuation">\\</span><span class="token punctuation">}</span> 重复字符x，至少m次，不多于n次，如：/0<span class="token punctuation">\\</span><span class="token punctuation">{</span><span class="token number">5,10</span><span class="token punctuation">\\</span><span class="token punctuation">}</span>/匹配5~10个0的行。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sed用法实例" tabindex="-1"><a class="header-anchor" href="#sed用法实例" aria-hidden="true">#</a> sed用法实例</h3>`,33),r={href:"https://www.linuxprobe.com/linux-sed-command.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://man.linuxde.net/sed",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const n=l("ExternalLinkIcon");return t(),p("div",null,[o,s("ul",null,[s("li",null,[s("a",r,[a("Linux之sed命令详解"),e(n)])]),s("li",null,[s("a",u,[a("sed命令"),e(n)])])])])}const k=i(d,[["render",v],["__file","command.html.vue"]]);export{k as default};
