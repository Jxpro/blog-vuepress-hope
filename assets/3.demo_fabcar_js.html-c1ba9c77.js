import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as p,a as s,b as n,d as e,e as t}from"./app-24ed71cb.js";const l={},r=t('<h1 id="fabric案例-fabcar" tabindex="-1"><a class="header-anchor" href="#fabric案例-fabcar" aria-hidden="true">#</a> Fabric案例 - fabcar</h1><p>这个教程演示了<strong>Javascript版本</strong>的 <code>FabCar</code> 智能合约和应用程序，但是 <code>fabric-samples</code> 仓库也包含 <strong>Go、Java 和 TypeScript 版本</strong>的样例。想尝试 Go、Java 或者 TypeScript 版本，只需改变 <code>./startFabric.sh</code> 的 <code>javascript</code> 参数为 <code>go</code>、 <code>java</code> 或者 <code>typescript</code>即可</p><h2 id="一、准备工作" tabindex="-1"><a class="header-anchor" href="#一、准备工作" aria-hidden="true">#</a> 一、准备工作</h2>',3),u={href:"https://www.python.org/download/releases/2.7/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.gnu.org/software/make/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://gcc.gnu.org/",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>可以执行如下命令安装其他工具:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> build-essential

<span class="token comment"># 查看Python版本</span>
$ python2 <span class="token parameter variable">-V</span>
Python <span class="token number">2.7</span>.17

$ python3 <span class="token parameter variable">-V</span>
Python <span class="token number">3.6</span>.7

$ python <span class="token parameter variable">-V</span>
Python <span class="token number">2.7</span>.17
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装nodejs（JavaScript编写版本）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载</span>
<span class="token function">wget</span> https://npm.taobao.org/mirrors/node/latest-gallium/node-v16.13.0-linux-x64.tar.xz

<span class="token comment"># 解压，这里不用-z参数，因为不是.gz 文件</span>
<span class="token function">tar</span> <span class="token parameter variable">-C</span> /usr/local <span class="token parameter variable">-xf</span> node-v16.13.0-linux-x64.tar.xz
<span class="token builtin class-name">cd</span> /usr/local/
<span class="token function">mv</span> node-v16.13.0-linux-x64/ <span class="token function">node</span>

<span class="token comment">#加入环境变量</span>
<span class="token function">vim</span> ~/.profile
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/node/bin
<span class="token builtin class-name">source</span> ~/.profile

<span class="token comment"># 查看安装结果</span>
$ <span class="token function">node</span> <span class="token parameter variable">-v</span>
v16.13.0
$ <span class="token function">npm</span> <span class="token parameter variable">-v</span>
<span class="token number">8.1</span>.0

<span class="token comment"># 设置npm镜像源</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、设置网络" tabindex="-1"><a class="header-anchor" href="#二、设置网络" aria-hidden="true">#</a> 二、设置网络</h2><p>此命令将部署<strong>两个peer节点和一个排序节点</strong>以部署Fabric测试网络。 我们将<strong>使用证书颁发机构启动测试网络</strong>，而不是使用cryptogen工具。 我们将使用这些CA的其中一个来创建证书以及一些key， 这些加密资料将在之后的步骤中被我们的应用程序使用。</p><p><code>startFabric.sh</code> 脚本还将部署和初始化在 <code>mychannel</code> 通道上的 FabCar智能合约的JavaScript版本，然后调用智能合约来把初始数据存储在帐本上。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token variable">$GOPATH</span>/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar

./startFabric.sh javascript
<span class="token comment"># startFabric.sh 部分源码</span>
<span class="token function">pushd</span> <span class="token punctuation">..</span>/test-network
./network.sh down
./network.sh up createChannel <span class="token parameter variable">-ca</span> <span class="token parameter variable">-s</span> couchdb
./network.sh deployCC <span class="token parameter variable">-ccn</span> fabcar <span class="token parameter variable">-ccv</span> <span class="token number">1</span> <span class="token parameter variable">-cci</span> initLedger <span class="token parameter variable">-ccl</span> <span class="token variable">\${CC_SRC_LANGUAGE}</span> <span class="token parameter variable">-ccp</span> <span class="token variable">\${CC_SRC_PATH}</span>

<span class="token comment"># 过程摘录</span>
<span class="token comment"># 停止网络</span>
Stopping network
<span class="token punctuation">..</span>.
Creating channel <span class="token string">&#39;mychannel&#39;</span><span class="token builtin class-name">.</span>
If network is not up, starting nodes with CLI <span class="token function">timeout</span> of <span class="token string">&#39;5&#39;</span> tries and CLI delay of <span class="token string">&#39;3&#39;</span> seconds and using database <span class="token string">&#39;couchdb with crypto from &#39;</span>Certificate Authorities<span class="token string">&#39;

# 启动网络
Bringing up network
LOCAL_VERSION=2.3.3
DOCKER_IMAGE_VERSION=2.3.3
CA_LOCAL_VERSION=1.5.2
CA_DOCKER_IMAGE_VERSION=1.5.2
Generating certificates using Fabric CA
Creating network &quot;fabric_test&quot; with the default driver
Creating ca_org2    ... done
Creating ca_orderer ... done
Creating ca_org1    ... done

Creating Org1 Identities
...

Creating Org2 Identities
...

Creating Orderer Org Identities
...

Generating CCP files for Org1 and Org2
...
Creating couchdb1               ... done
Creating couchdb0               ... done
Creating orderer.example.com    ... done
Creating peer0.org2.example.com ... done
Creating peer0.org1.example.com ... done
Creating cli                    ... done
...


# 建立通道
Generating channel genesis block &#39;</span>mychannel.block<span class="token string">&#39;
...
Creating channel mychannel
...
Channel &#39;</span>mychannel<span class="token string">&#39; created
...
Anchor peer set for org &#39;</span>Org1MSP<span class="token string">&#39; on channel &#39;</span>mychannel<span class="token string">&#39;
...
Anchor peer set for org &#39;</span>Org2MSP<span class="token string">&#39; on channel &#39;</span>mychannel<span class="token string">&#39;
...
Channel &#39;</span>mychannel<span class="token string">&#39; joined


# 部署链码
deploying chaincode on channel &#39;</span>mychannel<span class="token string">&#39;
executing with the following
- CHANNEL_NAME: mychannel
- CC_NAME: fabcar
- CC_SRC_PATH: ../chaincode/fabcar/javascript/
- CC_SRC_LANGUAGE: javascript
- CC_VERSION: 1
- CC_SEQUENCE: 1
- CC_END_POLICY: NA
- CC_COLL_CONFIG: NA
- CC_INIT_FCN: initLedger
- DELAY: 3
- MAX_RETRY: 5
- VERBOSE: false
+ peer lifecycle chaincode package fabcar.tar.gz --path ../chaincode/fabcar/javascript/ --lang node --label fabcar_1
+ res=0
Chaincode is packaged
...
Chaincode is installed on peer0.org1
...
Chaincode is installed on peer0.org2
...
Query installed successful on peer0.org1 on channel
...
Chaincode definition approved on peer0.org1 on channel &#39;</span>mychannel<span class="token string">&#39;
...
Chaincode definition approved on peer0.org2 on channel &#39;</span>mychannel<span class="token string">&#39;
...
Chaincode definition committed on channel &#39;</span>mychannel<span class="token string">&#39;
...
Query chaincode definition successful on peer0.org1 on channel &#39;</span>mychannel<span class="token string">&#39;
...
Query chaincode definition successful on peer0.org2 on channel &#39;</span>mychannel<span class="token string">&#39;
...
Invoke transaction successful on peer0.org1 peer0.org2 on channel &#39;</span>mychannel&#39;

<span class="token comment"># 说明</span>
Total setup execution <span class="token function">time</span> <span class="token builtin class-name">:</span> <span class="token number">344</span> secs <span class="token punctuation">..</span>.
Next, use the FabCar applications to interact with the deployed FabCar contract.
The FabCar applications are available <span class="token keyword">in</span> multiple programming languages.
Follow the instructions <span class="token keyword">for</span> the programming language of your choice:

JavaScript:
  Start by changing into the <span class="token string">&quot;javascript&quot;</span> directory:
    <span class="token builtin class-name">cd</span> javascript
  Next, <span class="token function">install</span> all required packages:
    <span class="token function">npm</span> <span class="token function">install</span>

  Then run the following applications to enroll the admin user, and register a new user
  called appUser <span class="token function">which</span> will be used by the other applications to interact with the deployed
  FabCar contract:
    <span class="token function">node</span> enrollAdmin
    <span class="token function">node</span> registerUser

  You can run the invoke application as follows. By default, the invoke application will
  create a new car, but you can update the application to submit other transactions:
    <span class="token function">node</span> invoke

  You can run the query application as follows. By default, the query application will
  <span class="token builtin class-name">return</span> all cars, but you can update the application to evaluate other transactions:
    <span class="token function">node</span> query
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、安装依赖" tabindex="-1"><a class="header-anchor" href="#三、安装依赖" aria-hidden="true">#</a> 三、安装依赖</h2><p>这个指令将安装应用程序的主要依赖，这些依赖定义在 <code>package.json</code> 中。其中最重要的是 <code>fabric-network</code> 类；它使得应用程序可以使用身份、钱包和连接到通道的网关，以及提交交易和等待通知。本教程也将使用 <code>fabric-ca-client</code> 类来注册用户以及他们的授权证书，生成一个 <code>fabric-network</code> 在后边会用到的合法身份。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> javascript
<span class="token function">npm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、登记管理员用户" tabindex="-1"><a class="header-anchor" href="#四、登记管理员用户" aria-hidden="true">#</a> 四、登记管理员用户</h2><blockquote><p>下边的部分执行和证书授权服务器通讯，在运行下边的程序时，可以打开一个新终端，并运行 <code>docker logs -f ca_org1</code> 来查看 CA 的日志流，会很有帮助。</p></blockquote><p>当我们创建网络的时候，一个管理员用户（ <code>admin</code>）被证书授权服务器（<code>CA</code>）创建成了 <strong>注册员</strong> 。我们第一步要使用 <code>enroll.js</code> 程序为 <code>admin</code> 生成私钥、公钥和 x.509 证书。这个程序使用一个 <strong>证书签名请求</strong> （<code>CSR</code>）——现在本地生成公钥和私钥，然后把公钥发送到 CA ，CA 会发布会一个让应用程序使用的证书。这三个证书会保存在钱包中，以便于我们<strong>以管理员的身份使用 CA</strong>。</p><p>我们登记一个 <code>admin</code> 用户，这个命令将 CA 管理员的证书保存在 <code>wallet</code> 目录。 您可以在 <code>wallet/admin.id</code> 文件中找到管理员的证书和私钥：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> enrollAdmin.js

<span class="token comment"># 终端输出</span>
Wallet path: /root/go/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar/javascript/wallet
Successfully enrolled admin user <span class="token string">&quot;admin&quot;</span> and imported it into the wallet

<span class="token comment"># docker logs -f ca_org1 输出</span>
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Received request <span class="token keyword">for</span> /api/v1/enroll
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> ca.Config: <span class="token operator">&amp;</span><span class="token punctuation">{</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">}</span>
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Getting identity admin
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Login user admin with max enrollments of <span class="token parameter variable">-1</span> and state of <span class="token number">1</span>
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: identity admin successfully logged <span class="token keyword">in</span>
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Getting identity admin
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Requested expiry <span class="token string">&#39;0001-01-01 00:00:00 +0000 UTC&#39;</span> is before the CA certificate expiry <span class="token string">&#39;2021-11-06 05:54:00 +0000 UTC&#39;</span><span class="token builtin class-name">.</span> Will use CA cert expiry
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Processing sign request: <span class="token assign-left variable">id</span><span class="token operator">=</span>admin, <span class="token assign-left variable">CommonName</span><span class="token operator">=</span>admin, <span class="token assign-left variable">Subject</span><span class="token operator">=</span><span class="token operator">&lt;</span>nil<span class="token operator">&gt;</span>
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Request is not <span class="token keyword">for</span> a CA signing certificate
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Checking CSR fields to <span class="token function">make</span> sure that they <span class="token keyword">do</span> not exceed maximum character limits
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Finished processing sign request
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Getting identity admin
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> signed certificate with serial number <span class="token number">336076363807987864110041852220743842877365008258</span>
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Insert Certificate
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Saved serial number as hex 3ade2f73c0c2404a1dce6e2e70aea765297bb782
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> saved certificate with serial number <span class="token number">336076363807987864110041852220743842877365008258</span>
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Successfully incremented state <span class="token keyword">for</span> identity admin to <span class="token number">2</span>
<span class="token number">2021</span>/11/06 06:08:03 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> <span class="token number">172.27</span>.0.1:33124 POST /api/v1/enroll <span class="token number">201</span> <span class="token number">0</span> <span class="token string">&quot;OK&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、注册和登记应用程序用户" tabindex="-1"><a class="header-anchor" href="#五、注册和登记应用程序用户" aria-hidden="true">#</a> 五、注册和登记应用程序用户</h2><p>既然我们的 <code>admin</code> 是用来与CA一起工作的。 我们也已经在钱包中有了管理员的凭据， 那么我们可以创建一个<strong>新的应用程序用户</strong>，它将被用于与区块链交互。 运行以下命令注册和记录一个名为 <code>appUser</code> 的新用户。</p><p>与admin注册类似，该程序使用<code>CSR</code>注册 <code>appUser</code> 并将其凭证与 <code>admin</code> 凭证一起存储在钱包中。 现在，我们有了两个独立用户的身份—— <code>admin</code> 和 <code>appUser</code> ——它们可以被我们的应用程序使用。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> registerUser.js

<span class="token comment"># 终端输出</span>
Wallet path: /root/go/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar/javascript/wallet
Successfully registered and enrolled admin user <span class="token string">&quot;appUser&quot;</span> and imported it into the wallet

<span class="token comment"># docker logs -f ca_org1 输出</span>
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Received request <span class="token keyword">for</span> /api/v1/register
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Caller is using a x509 certificate
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Certicate Dates: NotAfter <span class="token operator">=</span> <span class="token number">2022</span>-11-06 06:08:00 +0000 UTC NotBefore <span class="token operator">=</span> <span class="token number">2021</span>-11-06 05:54:00 +0000 UTC
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Checking <span class="token keyword">for</span> revocation/expiration of certificate owned by <span class="token string">&#39;admin&#39;</span>
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Get certificate by serial <span class="token punctuation">(</span>3ade2f73c0c2404a1dce6e2e70aea765297bb782<span class="token punctuation">)</span> and aki <span class="token punctuation">(</span>19a0bea446fbc47d4aa79ea118e98f2682c987bf<span class="token punctuation">)</span>
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Getting identity admin
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Successful token authentication of <span class="token string">&#39;admin&#39;</span>
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Received registration request from admin: <span class="token punctuation">{</span> Name:appUser Type:client Secret:**** MaxEnrollments:1 Affiliation:org1.department1 Attributes:<span class="token punctuation">[</span><span class="token punctuation">]</span> CAName:  <span class="token punctuation">}</span>
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> canRegister - Check to see <span class="token keyword">if</span> user <span class="token string">&#39;admin&#39;</span> can register
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Checking to see <span class="token keyword">if</span> <span class="token builtin class-name">caller</span> <span class="token string">&#39;admin&#39;</span> can act on <span class="token builtin class-name">type</span> <span class="token string">&#39;client&#39;</span>
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Checking to see <span class="token keyword">if</span> <span class="token builtin class-name">caller</span> <span class="token string">&#39;admin&#39;</span> is a registrar
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Validating affiliation: org1.department1
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Checking to see <span class="token keyword">if</span> affiliation <span class="token string">&#39;org1.department1&#39;</span> contains <span class="token builtin class-name">caller</span><span class="token string">&#39;s affiliation &#39;</span>&#39;
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Caller has root affiliation
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Get affiliation org1.department1
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Registering user id: appUser
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Max enrollment value verification - User specified max enrollment: <span class="token number">1</span>, CA max enrollment: <span class="token parameter variable">-1</span>
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Getting identity appUser
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Add identity appUser
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Successfully added identity appUser to the database
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> <span class="token number">172.27</span>.0.1:33160 POST /api/v1/register <span class="token number">201</span> <span class="token number">0</span> <span class="token string">&quot;OK&quot;</span>

<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Received request <span class="token keyword">for</span> /api/v1/enroll
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> ca.Config: <span class="token operator">&amp;</span><span class="token punctuation">{</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">}</span>
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Getting identity appUser
<span class="token number">2021</span>/11/06 06:10:45 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Login user appUser with max enrollments of <span class="token number">1</span> and state of <span class="token number">0</span>
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: identity appUser successfully logged <span class="token keyword">in</span>
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Getting identity appUser
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Requested expiry <span class="token string">&#39;0001-01-01 00:00:00 +0000 UTC&#39;</span> is before the CA certificate expiry <span class="token string">&#39;2021-11-06 05:54:00 +0000 UTC&#39;</span><span class="token builtin class-name">.</span> Will use CA cert expiry
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Processing sign request: <span class="token assign-left variable">id</span><span class="token operator">=</span>appUser, <span class="token assign-left variable">CommonName</span><span class="token operator">=</span>appUser, <span class="token assign-left variable">Subject</span><span class="token operator">=</span><span class="token operator">&lt;</span>nil<span class="token operator">&gt;</span>
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Request is not <span class="token keyword">for</span> a CA signing certificate
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Checking CSR fields to <span class="token function">make</span> sure that they <span class="token keyword">do</span> not exceed maximum character limits
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Finished processing sign request
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Getting identity appUser
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Attribute extension being added to certificate is: <span class="token operator">&amp;</span><span class="token punctuation">{</span>ID:<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">1</span><span class="token punctuation">]</span> Critical:false Value:7b226174747273223a7b2268662e416666696c696174696f6e223a226f7267312e6465706172746d656e7431222c2268662e456e726f6c6c6d656e744944223a2261707055736572222c2268662e54797065223a22636c69656e74227d7d<span class="token punctuation">}</span>
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Adding attribute extension to CSR: <span class="token operator">&amp;</span><span class="token punctuation">{</span>ID:<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">1</span><span class="token punctuation">]</span> Critical:false Value:7b226174747273223a7b2268662e416666696c696174696f6e223a226f7267312e6465706172746d656e7431222c2268662e456e726f6c6c6d656e744944223a2261707055736572222c2268662e54797065223a22636c69656e74227d7d<span class="token punctuation">}</span>
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> signed certificate with serial number <span class="token number">408002549846028683500546520131538177228654950487</span>
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> DB: Insert Certificate
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Saved serial number as hex 4777779329a93ea1385ba46423a3a368ab5ab857
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> saved certificate with serial number <span class="token number">408002549846028683500546520131538177228654950487</span>
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> Successfully incremented state <span class="token keyword">for</span> identity appUser to <span class="token number">1</span>
<span class="token number">2021</span>/11/06 06:10:46 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> <span class="token number">172.27</span>.0.1:33164 POST /api/v1/enroll <span class="token number">201</span> <span class="token number">0</span> <span class="token string">&quot;OK&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、查询账本" tabindex="-1"><a class="header-anchor" href="#六、查询账本" aria-hidden="true">#</a> 六、查询账本</h2>`,21),v={href:"https://hyperledger-fabric.readthedocs.io/zh_CN/release-2.2/ledger/ledger.html",target:"_blank",rel:"noopener noreferrer"},b=s("strong",null,"查询账本",-1),g=s("p",null,"这里是一个查询工作如何进行的简单说明：",-1),q={href:"https://hyperledger-fabric.readthedocs.io/zh_CN/release-2.2/ledger/ledger.html#world-state",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>首先，我们来运行我们的 <code>query.js</code> 程序来返回账本上所有汽车的侦听。这个程序使用我们的第二个身份<code>user1</code>来操作账本。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> query.js

<span class="token comment"># 结果</span>
Wallet path: /root/go/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar/javascript/wallet
Transaction has been evaluated, result is: <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR0&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;blue&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Toyota&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Prius&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Tomoko&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR1&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;red&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Ford&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Mustang&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Brad&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR2&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;green&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Hyundai&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Tucson&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Jin Soo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR3&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;yellow&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Volkswagen&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Passat&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Max&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR4&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;black&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Tesla&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;S&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Adriana&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR5&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;purple&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Peugeot&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;205&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Michel&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR6&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;white&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Chery&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;S22L&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Aarav&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR7&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;violet&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Fiat&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Punto&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Pari&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR8&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;indigo&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Tata&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Nano&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Valeria&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;Key&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CAR9&quot;</span>,<span class="token string">&quot;Record&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;brown&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Holden&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Barina&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Shotaro&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token comment"># docker logs -f ca_org1 输出无变化</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七、查询指定内容" tabindex="-1"><a class="header-anchor" href="#七、查询指定内容" aria-hidden="true">#</a> 七、查询指定内容</h2><p>分析源码\`\`fabric-samples/chaincode/fabcar/javascript/lib/fabcar.js\`</p><p>分析源码<code>fabric-samples/fabcar/javascript/query.js</code>，找到<code>queryCar</code>函数</p><p>修改<code>fabric-samples/fabcar/javascript/query.js</code>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vim query<span class="token punctuation">.</span>js

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> contract<span class="token punctuation">.</span><span class="token function">evaluateTransaction</span><span class="token punctuation">(</span><span class="token string">&#39;queryAllCars&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 修改为</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> contract<span class="token punctuation">.</span><span class="token function">evaluateTransaction</span><span class="token punctuation">(</span><span class="token string">&#39;queryCar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CAR4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新运行<code>query.js</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> query.js

<span class="token comment"># 结果</span>
Wallet path: /root/go/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar/javascript/wallet
Transaction has been evaluated, result is: <span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;black&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Tesla&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;S&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Adriana&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="八、更新账本-添加数据" tabindex="-1"><a class="header-anchor" href="#八、更新账本-添加数据" aria-hidden="true">#</a> 八、更新账本-添加数据</h2><p>从一个应用程序的角度来说，更新一个账本很简单。应用程序向区块链网络提交一个交易，当交易被验证和提交后，应用程序会收到一个交易成功的提醒。但是在底层，区块链网络中各组件中不同的 <strong>共识</strong> 程序协同工作，来保证账本的每一个更新提案都是合法的，而且有一个大家一致认可的顺序。</p><p>下图中，我们可以看到完成这项工作的主要组件。同时，多个节点中每一个节点都拥有一份账本的副本，并可选的拥有一份智能合约的副本，网络中也有一个排序服务。排序服务保证网络中交易的<strong>一致性</strong>；它也将连接到网络中不同的应用程序的交易以定义好的顺序生成区块。</p><figure><img src="https://raw.githubusercontent.com/Jxpro/PicBed/master/md/2021/11/06-162955.png" alt="_images/write_first_app.diagram.2.png" tabindex="0" loading="lazy"><figcaption>_images/write_first_app.diagram.2.png</figcaption></figure><p>我们对账本的的第一个更新是<strong>创建一辆新车</strong>。我们有一个单独的程序叫做 <code>invoke.js</code> ，用来更新账本，关键代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> contract<span class="token punctuation">.</span><span class="token function">submitTransaction</span><span class="token punctuation">(</span><span class="token string">&#39;createCar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CAR12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Honda&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Accord&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Black&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><ul><li>注意 <code>inovke</code> 程序是怎样使用 <code>submitTransaction</code> API 和区块链网络交互的，而不是 <code>evaluateTransaction</code> 。</li><li><code>submitTransaction</code> 比 <code>evaluateTransaction</code> 更加复杂。除了跟一个单独的 peer 进行互动外，SDK 会将 <code>submitTransaction</code> 提案发送给在区块链网络中的每个需要的组织的 peer。其中的每个 peer 将会使用这个提案来执行被请求的智能合约，以此来产生一个建议的回复，它会为这个回复签名并将其返回给 SDK。SDK 搜集所有签过名的交易反馈到一个单独的交易中，这个交易会被发送给排序节点。排序节点从每个应用程序那里搜集并将交易排序，然后打包进一个交易的区块中。接下来它会将这些区块分发给网络中的每个 peer，在那里每笔交易会被验证并提交。最后，SDK 会被通知，这允许它能够将控制返回给应用程序。</li><li><code>submitTransaction</code> 也包含一个监听者，它会检查来确保交易被验证并提交到账本中。应用程序应该使用一个提交监听者，或者使用像 <code>submitTransaction</code> 这样的 API 来给你做这件事情。如果不做这个，你的交易就可能没有被成功地排序、验证以及提交到账本。</li><li>应用程序中的这些工作由 <code>submitTransaction</code> 完成，应用程序、智能合约、节点和排序服务一起工作来保证网络中账本一致性的程序被称为<strong>共识</strong></li></ul></blockquote><p>运行<code>invoke.js</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> invoke.js

<span class="token comment"># 结果</span>
Wallet path: /root/go/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar/javascript/wallet
Transaction has been submitted

<span class="token comment"># docker logs -f ca_org1 输出无变化</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改<code>query.js</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vim query<span class="token punctuation">.</span>js

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> contract<span class="token punctuation">.</span><span class="token function">evaluateTransaction</span><span class="token punctuation">(</span><span class="token string">&#39;queryCar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CAR4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 修改为</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> contract<span class="token punctuation">.</span><span class="token function">evaluateTransaction</span><span class="token punctuation">(</span><span class="token string">&#39;queryCar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CAR12&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新运行<code>query.js</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> query.js

<span class="token comment"># 结果</span>
Wallet path: /root/go/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar/javascript/wallet
Transaction has been evaluated, result is: <span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Black&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Honda&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Accord&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="九、更新账本-修改数据" tabindex="-1"><a class="header-anchor" href="#九、更新账本-修改数据" aria-hidden="true">#</a> 九、更新账本-修改数据</h2><p>分析源码\`\`fabric-samples/chaincode/fabcar/javascript/lib/fabcar.js\`</p><p>分析源码<code>fabric-samples/fabcar/javascript/invoke.js</code></p><p>修改<code>fabric-samples/fabcar/javascript/invoke.js</code>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vim invoke<span class="token punctuation">.</span>js

<span class="token keyword">await</span> contract<span class="token punctuation">.</span><span class="token function">submitTransaction</span><span class="token punctuation">(</span><span class="token string">&#39;createCar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CAR12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Honda&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Accord&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Black&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 修改为</span>
<span class="token keyword">await</span> contract<span class="token punctuation">.</span><span class="token function">submitTransaction</span><span class="token punctuation">(</span><span class="token string">&#39;changeCarOwner&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CAR12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Dave&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新运行<code>invoke.js</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> invoke.js

<span class="token comment"># 结果</span>
Wallet path: /root/go/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar/javascript/wallet
Transaction has been submitted

<span class="token comment"># docker logs -f ca_org1 输出无变化</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新运行<code>query.js</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> query.js

<span class="token comment"># 结果</span>
Wallet path: /root/go/src/github.com/hyperledger/fabric/scripts/fabric-samples/fabcar/javascript/wallet
Transaction has been evaluated, result is: <span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Black&quot;</span>,<span class="token string">&quot;docType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;car&quot;</span>,<span class="token string">&quot;make&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Honda&quot;</span>,<span class="token string">&quot;model&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Accord&quot;</span>,<span class="token string">&quot;owner&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Dave&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十、清除数据" tabindex="-1"><a class="header-anchor" href="#十、清除数据" aria-hidden="true">#</a> 十、清除数据</h2><p>可以使用 <code>networkDown.sh</code> 脚本<strong>关闭测试网络</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>

./networkDown.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该命令将关闭我们创建的网络的CA、peer节点和排序节点。 它还将删除保存在 <code>wallet</code> 目录中的 <code>admin</code> 和 <code>appUser</code> 加密资料。 请注意，<strong>帐本上的所有数据都将丢失</strong>。 如果您想再次学习本教程，您将会以初始状态的形式启动网络。</p><h2 id="十一、参考文章" tabindex="-1"><a class="header-anchor" href="#十一、参考文章" aria-hidden="true">#</a> 十一、参考文章</h2>`,36),f={href:"https://hyperledger-fabric.readthedocs.io/zh_CN/release-2.2/write_first_app.html",target:"_blank",rel:"noopener noreferrer"};function y(C,w){const a=o("ExternalLinkIcon");return c(),p("div",null,[r,s("p",null,[n("Linux下需要安装 "),s("a",u,[n("Python v2.7"),e(a)]),n("，"),s("a",d,[n("make"),e(a)]),n("，和C/C++编译器工具链，如 "),s("a",k,[n("GCC"),e(a)])]),m,s("p",null,[n("区块链网络中的每个节点都拥有一个"),s("a",v,[n("账本"),e(a)]),n("的副本，应用程序可以通过执行智能合约查询账本上最新的数据来实现来"),b,n("，并将查询结果返回给应用程序。")]),g,s("blockquote",null,[s("p",null,[n("最常用的查询是查寻账本中询当前的值，也就是 "),s("a",q,[n("世界状态"),e(a)]),n(" 。世界状态是一个键值对的集合，应用程序可以根据一个键或者多个键来查询数据。而且，当键值对是以 JSON 值模式组织的时候，世界状态可以通过配置使用数据库（如 CouchDB ）来支持富查询。这对于查询所有资产来匹配特定的键的值是很有用的，比如查询一个人的所有汽车。")])]),h,s("ul",null,[s("li",null,[s("a",f,[n("编写你的第一个应用"),e(a)])])])])}const D=i(l,[["render",y],["__file","3.demo_fabcar_js.html.vue"]]);export{D as default};
