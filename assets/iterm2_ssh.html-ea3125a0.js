import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as r,a as e,b as a,d,e as i}from"./app-24ed71cb.js";const l={},t=i(`<h1 id="iterm2通过ssh连接服务器并传输文件" tabindex="-1"><a class="header-anchor" href="#iterm2通过ssh连接服务器并传输文件" aria-hidden="true">#</a> iTerm2通过ssh连接服务器并传输文件</h1><h2 id="一、手动登录服务器" tabindex="-1"><a class="header-anchor" href="#一、手动登录服务器" aria-hidden="true">#</a> 一、手动登录服务器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> user@host
user@host&#39;s password:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>整个 ssh 密码登录过程是这样的：</p><ol><li>用户向远程主机发登录请求：ssh user@host</li><li>远程主机收到用户的登录请求，把自己的公钥发给用户</li><li>用户使用这个公钥，将登录密码加密后，发送回远程主机</li><li>远程主机用自己的私钥，解密登录密码，如果密码正确，就同意用户登录。</li></ol><h2 id="二、自动登录服务器" tabindex="-1"><a class="header-anchor" href="#二、自动登录服务器" aria-hidden="true">#</a> 二、自动登录服务器</h2><p>iTerm2 有一个非常强大的功能叫触发器（Trigger），<strong>触发器是用户可配置的正则表达式，当终端会话接收到与正则表达式相匹配的文本时，会执行相关的操作</strong>。这里的操作包括突出显示匹配的文本，显示警报，发回文本等等。</p><h3 id="_2-1-自动请求连接" tabindex="-1"><a class="header-anchor" href="#_2-1-自动请求连接" aria-hidden="true">#</a> 2.1 自动请求连接</h3><blockquote><p>你可以直接在或者~/.zshrc里面添加一个alias，方便任何时候在当前窗口连接服务器（推荐）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">alias</span> <span class="token assign-left variable">server</span><span class="token operator">=</span><span class="token string">&quot;ssh user@host&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>还可以通过下面介绍的方法，在一个新的会话窗口来连接服务器。</p></blockquote><ol><li>首先点击<code>Preference - Profiles</code>，新建<code>Profiles</code>。</li><li>然后点击<code>Login Shell</code>，改为<code>Command</code>。</li><li>输入<code>ssh user@host</code>，填写服务器的 ip 和用户名，如果端口不是 22 还要通过 -p 指定端口。</li></ol><p><img src="https://raw.githubusercontent.com/Jxpro/PicBed/master/md/new2023-03-19-024028.png" alt="image-20230319020250078" loading="lazy">这样当你在菜单栏点击<code>Profiles</code>，选择<code>server</code>打开新窗口时，即可自动请求连接。</p><figure><img src="https://raw.githubusercontent.com/Jxpro/PicBed/master/md/new2023-03-19-024806.png" alt="image-20230319024806350" tabindex="0" loading="lazy"><figcaption>image-20230319024806350</figcaption></figure><h3 id="_2-2-自动输入密码" tabindex="-1"><a class="header-anchor" href="#_2-2-自动输入密码" aria-hidden="true">#</a> 2.2 自动输入密码</h3><p>在当前<code>Profiles</code>中，切换到<code>Advanced</code>，找到<code>Trriggers</code>，点击<code>edit</code></p><figure><img src="https://raw.githubusercontent.com/Jxpro/PicBed/master/md/new2023-03-19-025639.png" alt="image-20230319025638608" tabindex="0" loading="lazy"><figcaption>image-20230319025638608</figcaption></figure><ol><li>首先，点击<code>+</code>新建一个触发器。</li><li>在<code>Regular Eexpression</code>中，填写<code>root@xxx.xxx.xxx.xxx&#39;s password</code>，表示出现这行字符串时触发。</li><li>在<code>Action</code>中选择<code>Send Text</code>，表示自动输入文本内容。</li><li>在<code>Parameters</code>中填写你的密码，最后增加一个 <code>\\n</code> ，表示回车。</li><li>最后，把 <code>Instant</code> 的复选框选中并<code>close</code>。</li></ol><figure><img src="https://raw.githubusercontent.com/Jxpro/PicBed/master/md/new2023-03-19-030037.png" alt="image-20230319030037433" tabindex="0" loading="lazy"><figcaption>image-20230319030037433</figcaption></figure><p>这样便实现了自动输入密码</p><h3 id="_2-3-其他一些方法" tabindex="-1"><a class="header-anchor" href="#_2-3-其他一些方法" aria-hidden="true">#</a> 2.3 其他一些方法</h3>`,19),h={href:"https://blog.csdn.net/OMars/article/details/89627642",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"用expect的方式登录服务器，用rz、sz进行相关操作时，显示都是没问题的，可以正常选择上传文件或者选择下载目录，没有抛出任何异常但是最后上传文件也找不到不过文件却不能成功上传下载。",-1),u={href:"https://icloudnative.io/posts/iterm2-auto-login/",target:"_blank",rel:"noopener noreferrer"},p=i(`<h2 id="三、通过lrzsz传输文件" tabindex="-1"><a class="header-anchor" href="#三、通过lrzsz传输文件" aria-hidden="true">#</a> 三、通过lrzsz传输文件</h2><h3 id="_3-1-什么是-zmodem" tabindex="-1"><a class="header-anchor" href="#_3-1-什么是-zmodem" aria-hidden="true">#</a> 3.1 什么是 Zmodem</h3><p><code>Zmodem</code>是针对<code>modem</code>的一种支持错误校验的文件传输协议。<code>Zmodem</code>是<code>Ymodem</code>的改进版，后者又是<code>Xmodem</code>的改进版。<code>Zmodem</code>不仅能传输更大的数据，而且错误率更小。</p><p>利用<code>Zmodem</code>协议，可以在<code>modem</code>上发送 512 字节的数据块。<code>Zmodem</code>包含一种名为检查点重启的特性，如果通信链接在数据传输过程中中断，能从断点处而不是从开始处恢复传输。</p><p><code>lrzsz</code>软件包是支持<code>Zmodem</code>协议的工具包。 其包含的<code>rz</code>、<code>sz</code>命令是通过<code>ZModem</code>协议在远程服务器和终端机器间上传下载文件的利器。</p><h3 id="_3-2-服务端配置" tabindex="-1"><a class="header-anchor" href="#_3-2-服务端配置" aria-hidden="true">#</a> 3.2 服务端配置</h3><p>为了正确通过<code>sz</code>、<code>rz</code>命令传输文件，服务端需要安装<code>lrzsz</code>软件包的。</p><ul><li>Ubuntu 或 Debian</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt-get</span> <span class="token function">install</span> lrzsz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>RHEL 或 CentOS</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> lrzsz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-客户端-iterm2-配置" tabindex="-1"><a class="header-anchor" href="#_3-3-客户端-iterm2-配置" aria-hidden="true">#</a> 3.3 客户端（iterm2）配置</h3><p>和服务器端一样，客户端同样需要安装<code>lrzsz</code>软件包，可以通过<code>Homebrew</code> 进行安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> lrzsz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下载配置脚本，让 <code>iTerm2</code> 根据终端上显示的字符通过指定的触发器调用相应的发送和接收脚本。</p><p>脚本可存储在任意位置，建议在<code>~/.ssh</code>或者<code>/usr/local/bin</code>下，下面以<code>~/.ssh</code>为例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> https://gist.githubusercontent.com/Jxpro/03cdd6d527ab0a88ae55f1425ff1f683/raw/5b374789be149f2a44dfd256ce316f2274d175ce/iterm2-zmodem.sh <span class="token parameter variable">-o</span> ~/.ssh/iterm2-zmodem.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加执行权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> +x ~/.ssh/iterm2-zmodem.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置触发器（上文自动登录中所介绍），按如下内容添加两个触发器。</p><p>首先是 <code>sz</code> 指令的触发器（<code>Parameters</code>中需确认上述脚本所在位置）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Regular expression: rz waiting to receive.<span class="token punctuation">\\</span>*<span class="token punctuation">\\</span>*B0100
Action: Run Silent Coprocess
Parameters: ~/.ssh/iterm2-zmodem.sh send
Instant: checked
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其次是 <code>rz</code> 指令的触发器（<code>Parameters</code>中需确认上述脚本所在位置）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Regular expression: <span class="token punctuation">\\</span>*<span class="token punctuation">\\</span>*B00000000000000
Action: Run Silent Coprocess
Parameters: ~/.ssh/iterm2-zmodem.sh recv
Instant: checked
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功增加完成后如图所示</p><figure><img src="https://raw.githubusercontent.com/Jxpro/PicBed/master/md/new2023-03-19-032858.png" alt="image-20230319032857989" tabindex="0" loading="lazy"><figcaption>image-20230319032857989</figcaption></figure><h3 id="_3-4-发送文件到远端服务器" tabindex="-1"><a class="header-anchor" href="#_3-4-发送文件到远端服务器" aria-hidden="true">#</a> 3.4 发送文件到远端服务器</h3><ul><li>在远端服务器执行<code>rz</code>命令</li><li>本地选择文件传输</li><li>等待传输指示消失</li></ul><h3 id="_3-5-接收远端服务器的文件" tabindex="-1"><a class="header-anchor" href="#_3-5-接收远端服务器的文件" aria-hidden="true">#</a> 3.5 接收远端服务器的文件</h3><ul><li>在远端服务器执行<code>sz filename1 filename2 … filenameN</code>命令</li><li>本地选择目录保存</li><li>等待传输指示消失</li></ul>`,30);function g(b,v){const s=o("ExternalLinkIcon");return c(),r("div",null,[t,e("p",null,[e("a",h,[a("expect脚本和sshpass指令连接"),d(s)])]),e("blockquote",null,[m,e("p",null,[a("解决方法参考（未尝试）："),e("a",u,[a("iTerm2 实现 ssh 自动登录，并使用 Zmodem 实现快速传输文件"),d(s)])])]),p])}const _=n(l,[["render",g],["__file","iterm2_ssh.html.vue"]]);export{_ as default};
